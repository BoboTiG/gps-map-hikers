from pathlib import Path

import pytest

from host.app import check_for_sos, get_all_traces

TRACES = Path(__file__).parent / "data"
EXPECTED_TRACES = [
    {
        "alt": 70.4,
        "date": "18/07/2023 à 20:28:17",
        "lat": 44.770385515876114,
        "lon": 0.7981667295098305,
        "dist": 0.0,
        "speed": 0.0,
        "tdist": 0.0,
        "tdist2": 0.0,
        "type": "start",
    },
    {
        "alt": 69.4,
        "date": "18/07/2023 à 20:29:31",
        "lat": 44.770343229174614,
        "lon": 0.7979858480393887,
        "dist": 15.0,
        "speed": 0.34,
        "tdist": 15.0,
        "tdist2": 15.0,
        "type": "in-between",
    },
    {
        "alt": 95.4,
        "date": "18/07/2023 à 20:30:34",
        "lat": 44.77024683728814,
        "lon": 0.7979628816246986,
        "dist": 25.0,
        "speed": 0.29,
        "tdist": 40.0,
        "tdist2": 40.0,
        "type": "in-between",
    },
    {
        "alt": 59.4,
        "date": "18/07/2023 à 20:31:37",
        "lat": 44.77014499716461,
        "lon": 0.7983508799225092,
        "dist": 58.0,
        "speed": 0.28,
        "tdist": 98.0,
        "tdist2": 98.0,
        "type": "in-between",
    },
    {
        "alt": 72.4,
        "date": "18/07/2023 à 20:44:13",
        "lat": 44.770885412581265,
        "lon": 0.797738078981638,
        "dist": 154.0,
        "speed": 0.21,
        "tdist": 252.0,
        "tdist2": 252.0,
        "type": "in-between",
    },
    {
        "alt": 62.4,
        "date": "18/07/2023 à 20:45:14",
        "lat": 44.77089459076524,
        "lon": 0.7978495582938194,
        "dist": 162.0,
        "speed": 0.26,
        "tdist": 414.0,
        "tdist2": 414.0,
        "type": "in-between",
    },
    {
        "alt": 66.4,
        "date": "18/07/2023 à 20:49:07",
        "lat": 44.77090884000063,
        "lon": 0.7979210559278727,
        "dist": 168.0,
        "speed": 0.24,
        "tdist": 582.0,
        "tdist2": 582.0,
        "type": "sos-past",
    },
    {
        "alt": 55.4,
        "date": "18/07/2023 à 20:50:21",
        "lat": 44.77089966181666,
        "lon": 0.7978481333702803,
        "dist": 174.0,
        "speed": 0.089999996,
        "tdist": 756.0,
        "tdist2": 756.0,
        "type": "sos-past",
    },
    {
        "alt": 69.4,
        "date": "18/07/2023 à 20:51:29",
        "lat": 44.77091148030013,
        "lon": 0.7979446928948164,
        "dist": 182.0,
        "speed": 0.19,
        "tdist": 938.0,
        "tdist2": 938.0,
        "type": "in-between",
    },
    {
        "alt": 76.4,
        "date": "18/07/2023 à 21:04:09",
        "lat": 44.77088323328644,
        "lon": 0.7978653162717819,
        "dist": 189.0,
        "speed": 0.06,
        "tdist": 1127.0,
        "tdist2": 1127.0,
        "type": "in-between",
    },
    {
        "alt": 67.4,
        "date": "18/07/2023 à 21:07:37",
        "lat": 44.770444189198315,
        "lon": 0.7981211319565773,
        "dist": 242.0,
        "speed": 0.42999998,
        "tdist": 1369.0,
        "tdist2": 1369.0,
        "type": "in-between",
    },
    {
        "alt": 64.4,
        "date": "18/07/2023 à 21:08:45",
        "lat": 44.77048978675157,
        "lon": 0.7980821561068296,
        "dist": 248.0,
        "speed": 0.0,
        "tdist": 1617.0,
        "tdist2": 1617.0,
        "type": "in-between",
    },
    {
        "alt": 75.4,
        "date": "18/07/2023 à 21:16:57",
        "lat": 44.770517237484455,
        "lon": 0.7981850858777761,
        "dist": 256.0,
        "speed": 1.7099999,
        "tdist": 1873.0,
        "tdist2": 1873.0,
        "type": "in-between",
    },
    {
        "alt": 75.4,
        "date": "18/07/2023 à 21:20:45",
        "lat": 44.770469879731536,
        "lon": 0.7980780489742756,
        "dist": 266.0,
        "speed": 0.02,
        "tdist": 2139.0,
        "tdist2": 2139.0,
        "type": "in-between",
    },
    {
        "alt": 78.4,
        "date": "18/07/2023 à 21:22:00",
        "lat": 44.7704518167302,
        "lon": 0.7981756143271923,
        "dist": 274.0,
        "speed": 0.089999996,
        "tdist": 2413.0,
        "tdist2": 2413.0,
        "type": "in-between",
    },
    {
        "alt": 47.4,
        "date": "18/07/2023 à 21:23:08",
        "lat": 44.77049733046442,
        "lon": 0.798140661790967,
        "dist": 280.0,
        "speed": 0.14,
        "tdist": 2693.0,
        "tdist2": 2693.0,
        "type": "in-between",
    },
    {
        "alt": 80.4,
        "date": "18/07/2023 à 21:29:33",
        "lat": 44.77050290443003,
        "lon": 0.7980679906904697,
        "dist": 286.0,
        "speed": 0.07,
        "tdist": 2979.0,
        "tdist2": 2979.0,
        "type": "in-between",
    },
    {
        "alt": 79.4,
        "date": "18/07/2023 à 21:32:04",
        "lat": 44.77041108068079,
        "lon": 0.7980332896113396,
        "dist": 296.0,
        "speed": 0.44,
        "tdist": 3275.0,
        "tdist2": 3275.0,
        "type": "in-between",
    },
    {
        "alt": 79.4,
        "date": "18/07/2023 à 21:32:05",
        "lat": 44.77041108068079,
        "lon": 0.7980332896113396,
        "dist": 0.0,
        "speed": 0.44,
        "tdist": 3275.0,
        "tdist2": 3275.0,
        "type": "pause",
    },
    {
        "alt": 68.4,
        "date": "18/07/2023 à 21:33:25",
        "lat": 44.770480818115175,
        "lon": 0.798122389242053,
        "dist": 307.0,
        "speed": 0.14,
        "tdist": 3582.0,
        "tdist2": 307.0,
        "type": "in-between",
    },
    {
        "alt": 83.4,
        "date": "18/07/2023 à 21:34:34",
        "lat": 44.77041476871818,
        "lon": 0.7982177753001451,
        "dist": 317.0,
        "speed": 0.65,
        "tdist": 3899.0,
        "tdist2": 624.0,
        "type": "in-between",
    },
    {
        "alt": 76.4,
        "date": "18/07/2023 à 21:35:40",
        "lat": 44.770513088442385,
        "lon": 0.7981205452233553,
        "dist": 331.0,
        "speed": 0.08,
        "tdist": 4230.0,
        "tdist2": 955.0,
        "type": "in-between",
    },
    {
        "alt": 70.4,
        "date": "18/07/2023 à 21:36:52",
        "lat": 44.770572977140546,
        "lon": 0.798109145835042,
        "dist": 337.0,
        "speed": 0.0,
        "tdist": 4567.0,
        "tdist2": 1292.0,
        "type": "in-between",
    },
    {
        "alt": 65.4,
        "date": "18/07/2023 à 21:40:11",
        "lat": 44.77052520029247,
        "lon": 0.7980506401509047,
        "dist": 344.0,
        "speed": 0.21,
        "tdist": 4911.0,
        "tdist2": 1636.0,
        "type": "in-between",
    },
    {
        "alt": 78.4,
        "date": "18/07/2023 à 21:41:21",
        "lat": 44.77044703904539,
        "lon": 0.7980849221348763,
        "dist": 354.0,
        "speed": 0.19999999,
        "tdist": 5265.0,
        "tdist2": 1990.0,
        "type": "in-between",
    },
    {
        "alt": 78.4,
        "date": "18/07/2023 à 21:42:30",
        "lat": 44.7704335860908,
        "lon": 0.7981730159372091,
        "dist": 361.0,
        "speed": 0.14,
        "tdist": 5626.0,
        "tdist2": 2351.0,
        "type": "in-between",
    },
    {
        "alt": 82.4,
        "date": "18/07/2023 à 21:43:48",
        "lat": 44.770494061522186,
        "lon": 0.7981248199939728,
        "dist": 368.0,
        "speed": 0.0,
        "tdist": 5994.0,
        "tdist2": 2719.0,
        "type": "in-between",
    },
    {
        "alt": 67.4,
        "date": "18/07/2023 à 21:49:11",
        "lat": 44.77056857664138,
        "lon": 0.7980759534984827,
        "dist": 378.0,
        "speed": 0.13,
        "tdist": 6372.0,
        "tdist2": 3097.0,
        "type": "in-between",
    },
    {
        "alt": 75.4,
        "date": "18/07/2023 à 21:50:16",
        "lat": 44.77047855500132,
        "lon": 0.7981041166931391,
        "dist": 388.0,
        "speed": 0.03,
        "tdist": 6760.0,
        "tdist2": 3485.0,
        "type": "in-between",
    },
    {
        "alt": 73.4,
        "date": "18/07/2023 à 21:51:29",
        "lat": 44.770526960492134,
        "lon": 0.7980821561068296,
        "dist": 393.0,
        "speed": 0.0,
        "tdist": 7153.0,
        "tdist2": 3878.0,
        "type": "in-between",
    },
    {
        "alt": 67.4,
        "date": "18/07/2023 à 21:56:52",
        "lat": 44.77047134656459,
        "lon": 0.7978533301502466,
        "dist": 413.0,
        "speed": 0.0,
        "tdist": 7566.0,
        "tdist2": 4291.0,
        "type": "in-between",
    },
    {
        "alt": 64.4,
        "date": "18/07/2023 à 21:58:08",
        "lat": 44.77038694079965,
        "lon": 0.7979360595345497,
        "dist": 424.0,
        "speed": 0.31,
        "tdist": 7990.0,
        "tdist2": 4715.0,
        "type": "in-between",
    },
    {
        "alt": 67.4,
        "date": "18/07/2023 à 22:06:25",
        "lat": 44.77045009844005,
        "lon": 0.7979208044707775,
        "dist": 431.0,
        "speed": 0.68,
        "tdist": 8421.0,
        "tdist2": 5146.0,
        "type": "in-between",
    },
    {
        "alt": 76.4,
        "date": "18/07/2023 à 22:19:41",
        "lat": 44.770413218066096,
        "lon": 0.7980192918330431,
        "dist": 440.0,
        "speed": 0.06,
        "tdist": 8861.0,
        "tdist2": 5586.0,
        "type": "in-between",
    },
    {
        "alt": 78.4,
        "date": "18/07/2023 à 22:31:24",
        "lat": 44.77034264244139,
        "lon": 0.7979436870664358,
        "dist": 450.0,
        "speed": 0.22,
        "tdist": 9311.0,
        "tdist2": 6036.0,
        "type": "in-between",
    },
    {
        "alt": 68.4,
        "date": "18/07/2023 à 22:32:48",
        "lat": 44.77042298298329,
        "lon": 0.7979252468794584,
        "dist": 459.0,
        "speed": 0.0,
        "tdist": 9770.0,
        "tdist2": 6495.0,
        "type": "end",
    },
]


def test_get_all_traces_no_traces(tmp_path):
    assert get_all_traces(tmp_path) == []


def test_get_all_traces():
    for t in get_all_traces(TRACES):
        print(f"{t},")
    for idx, trace in enumerate(get_all_traces(TRACES)):
        assert trace == EXPECTED_TRACES[idx]


@pytest.mark.parametrize(
    "traces, expected",
    [
        (
            [
                {"type": "start"},
            ],
            [
                {"type": "start"},
            ],
        ),
        (
            [
                {"type": "sos"},
            ],
            [
                {"type": "sos"},
            ],
        ),
        (
            [
                {"type": "start"},
                {"type": "sos"},
                {"type": "sos"},
            ],
            [
                {"type": "start"},
                {"type": "sos"},
                {"type": "sos"},
            ],
        ),
        (
            [
                {"type": "start"},
                {"type": "sos"},
                {"type": "sos"},
                {"type": "end"},
            ],
            [
                {"type": "start"},
                {"type": "sos-past"},
                {"type": "sos-past"},
                {"type": "end"},
            ],
        ),
        (
            [
                {"type": "start"},
                {"type": "in-between"},
                {"type": "sos"},
                {"type": "sos"},
                {"type": "in-between"},
                {"type": "sos"},
                {"type": "sos"},
            ],
            [
                {"type": "start"},
                {"type": "in-between"},
                {"type": "sos-past"},
                {"type": "sos-past"},
                {"type": "in-between"},
                {"type": "sos"},
                {"type": "sos"},
            ],
        ),
        (
            [
                {"type": "start"},
                {"type": "in-between"},
                {"type": "sos"},
                {"type": "sos"},
                {"type": "in-between"},
                {"type": "sos"},
                {"type": "sos"},
                {"type": "end"},
            ],
            [
                {"type": "start"},
                {"type": "in-between"},
                {"type": "sos-past"},
                {"type": "sos-past"},
                {"type": "in-between"},
                {"type": "sos-past"},
                {"type": "sos-past"},
                {"type": "end"},
            ],
        ),
    ],
)
def test_check_for_sos(traces, expected):
    assert check_for_sos(traces) == expected
